import { parseSyml, stringifySyml } from "@yarnpkg/parsers";
import { existsSync, readFileSync, writeFileSync } from "fs";

const lockHeader = `
# THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.
# DevScript lockfile v1


`.replace(/^\n+/g, ``);

export let lockData: {
	[key: string]: {
		version: string;
		ignoreUntilNext: "MAJOR" | "MINOR" | "PATCH";
	};
} = existsSync("devscript.lock")
	? parseSyml(readFileSync("devscript.lock", "utf8"))
	: {};

export function updateLock() {
	if (!stringifySyml(lockData) && !existsSync("devscript.lock")) return;
	writeFileSync("devscript.lock", lockHeader + stringifySyml(lockData));
}

export function validateLock(
	dependencies: {
		[name: string]: string;
	},
	devDependencies: {
		[name: string]: string;
	}
) {
	let updated = false;
	Object.keys(lockData).forEach((dep) => {
		if (
			!Object.keys(dependencies)
				.concat(Object.keys(devDependencies))
				.includes(dep)
		) {
			delete lockData[dep];
			updated = true;
		}
	});
	if (updated) updateLock();
}
